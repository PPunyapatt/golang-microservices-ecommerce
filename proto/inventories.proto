syntax = "proto3";

package Inventory.v1;

option go_package = "./Inventory";


message pagination {
    int32 page = 1; // Current page number
    int32 limit = 2;
    int32 offset = 3;
    optional int32 total = 4;
}

// -- Inventory --

message Inventory {
    int32 StoreID = 1;
    string AddBy = 2;
    string Name = 3;
    string Description = 4;
    string ImageURL = 5;
    double Price = 6;
    int32 Stock = 7;
    int32 CategoryID = 8;
    int32 ID = 9;
}

message AddInvenRequest {
    Inventory Inventory = 1;
}

message AddInvenResponse {
    string status = 1;
}

message UpdateInvenRequest {
    string InvetoriesID = 1;
    Inventory Inventory = 2;
}

message UpdateInvenResponse {
    string status = 1;
}

message RemoveInvenRequest {
    int32 InvetoriesID = 1;
}

message RemoveInvenResponse {
    string status = 1;
}

message GetInvetoryRequest {
    int32 InvetoriesID = 1;
}

message GetInvetoryResponse {
     Inventory Inventory = 1;
}

message ListInvetoriesRequest {
    string search = 1;
}

message ListInvetoriesResponse {
    repeated Inventory Inventory = 1;
    pagination Pagination = 2;
}



// -- Category --

message Category {
    int32 CategoryID = 1;
    string Name = 2;
    int32 StoreID = 3;
}

message AddCategoryRequest {
    string Name = 1;
}

message AddCategoryResponse {
    string status = 1;
}

message UpdateCategoryRequest {
    string Name = 1;
    int32 CategoryID = 2;
    int32 StoreID = 3;
}

message UpdateCategoryResponse {
    string status = 1;
}

message RemoveCatgoryRequest {
    int32 CategoryID = 1;
}

message RemoveCatgoryResponse {
    string status = 1;
}

 message ListCategoriesRequest {
    int32 StoreID = 1;
    string search = 2;
    pagination Pagination = 3;
 }

 message ListCategoriesResponse {
    repeated Category Catagories = 1;
    pagination Pagination = 2;
 }


service InventoryService {
    rpc AddInventory(AddInvenRequest) returns (AddInvenResponse);
    rpc UpdateInventory(UpdateInvenRequest) returns (UpdateInvenResponse);
    rpc RemoveInventory(RemoveInvenRequest) returns (RemoveInvenResponse);
    rpc GetInventory(GetInvetoryRequest) returns (GetInvetoryResponse);
    rpc ListInventories(ListInvetoriesRequest) returns (ListInvetoriesResponse);

    rpc AddCategory(AddCategoryRequest) returns (AddCategoryResponse);
    rpc UpdateCategory(UpdateCategoryRequest) returns (UpdateCategoryResponse);
    rpc RemoveCatgory(RemoveCatgoryRequest) returns (RemoveCatgoryResponse);
    rpc ListCategories(ListCategoriesRequest) returns (ListCategoriesResponse);
}