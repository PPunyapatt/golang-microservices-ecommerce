syntax = "proto3";

package order.v1;

option go_package = "./order";

message Empty {}

message Pagination {
    int32 page = 1; // Current page number
    int32 limit = 2;
    int32 offset = 3;
    optional int32 total = 4;
}



// --------- GetOrder ---------
message GetOrderRequest {
    int32 order_id = 1;
}

message item {
    int32 product_id = 1;
    string product_name = 2;
    double unit_price = 3;
    int32 quantity = 4;
}

message OrderItems {
    int32 order_item_id = 1;
    double total_price = 2;
    repeated item items = 3;
    int32 store_id = 4;
}

message GetOrderResponse {
    repeated OrderItems order_items = 1;
}


// --------- ListOrder ---------
message ListOrderRequest {
    optional string status = 1; 
}

message ListOrderResponse {
    Orders orders = 1;
    Pagination pagination = 2;
}

message Orders {
    int32 order_id = 1;
    int32 total_items = 2;
    double total_amount = 3;
    repeated StoreOrderItems items = 4;
}

message StoreOrderItems {
    int32 store_id = 1;
    item items = 2;
}


// --------- PlaceOrder ---------
message PlaceOrderRequest {
    string user_id = 1;
    int32 shipping_id = 2;
    repeated PlaceOrderStores order_items = 3;
}

message PlaceOrderStores {
    int32 store_id = 1;
    repeated PlaceOrderItems items = 2;
}

message PlaceOrderItems {
    int32 order_id = 1;
    int32 product_id = 2;
    int32 quantity = 3;
}


// ------------ UpdateStatus ------------
message UpdateStatusRequest {
    string PaymentStatus = 1;
    string OrderStatus = 2;
    int32 OrderID = 3;
}



service OrderService {
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
    rpc ListOrder(ListOrderRequest) returns (ListOrderResponse);
    rpc PlaceOrder(PlaceOrderRequest) returns (Empty);
    rpc UpdateStatus(UpdateStatusRequest) returns (Empty);
}