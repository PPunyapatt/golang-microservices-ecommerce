apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: ecommerce-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-app
  template:
    metadata:
      labels:
        app: auth-app
      annotations:
        ## Postgres Secret Injection
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-secret-dbuser: "secret/auth-secret/dbuser"
        vault.hashicorp.com/agent-inject-template-dbuser: |
          {{- with secret "secret/auth-secret/dbuser" -}}
          username={{ .Data.data.username }}
          password={{ .Data.data.password }}
          {{- end }}

        ## JWT Secret Injection
        vault.hashicorp.com/agent-inject-secret-jwt: "secret/auth-secret/jwt-secret"
        vault.hashicorp.com/agent-inject-template-jwt: |
          {{- with secret "secret/auth-secret/jwt-secret" -}}
          secret={{ .Data.data.secret }}
          {{- end }}
        vault.hashicorp.com/role: "auth-role"
    spec:
      serviceAccountName: secret-test
      containers:
        - name: auth-service
          image: 291041007391.dkr.ecr.ap-southeast-1.amazonaws.com/ecommerce/auth:4
          ports:
            - name: grpc
              protocol: TCP
              containerPort: 1024
          env:
            - name: ENVIRONMENT
              value: prod
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "54320"
            - name: JWT_LIFETIME
              value: "36000"
            - name: JAEGER_URL
              value: jaeger-service

      #     volumeMounts:
      #     - name: config-volume
      #       mountPath: /config
      # volumes:
      # - name: config-volume
      #   configMap:
      #     name: postgres-config